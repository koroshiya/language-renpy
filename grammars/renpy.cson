'scopeName': 'source.renpy'
'name': 'Ren\'Py'
'fileTypes': [
  'rpy', 'rpym'
]
'firstLineMatch': '^#!/.*\\brenpy\\b'
'patterns': [
  {
    'comment': 'keywords that alter flow from within a block'
    'name': 'keyword.control.statement.python'
    'match': '\\b(function|nvl|block|choice|parallel|contains|on|voice|imagemap|hotspot|text|frame|textbutton|grid|add|key|use|bar|with|is|button|window|hbox|vbox|mousearea|imagebutton)\\b'
  }
  {
    'comment': 'renpy screen statement keywords'
    'name': 'support.type.python'
    'match': '\\b(kind|color|action|area|hovered|unhovered|python|clicked|modal|text_style|default|has|who|what|tag|value|theme)\\b'
  }
  {
    'comment': 'renpy transform keywords'
    'name': 'support.type.python'
    'match': '\\b(repeat|transform|fadein|fadeout|position|Position|easein|easeout|time|ui)\\b'
  }
  {
    'comment': 'other renpy keywords'
    'name': 'support.type.python'
    'match': '\\b(Character|DynamicCharacter|music|sound|movie|pause|Transform|clear)\\b'
  }

# Python statements Ren'Py Keywords. View(http://www.renpy.org/doc/html/python.html)

  {
    'comment': 'python one-line renpy keyword'
    'name': 'invalid.deprecated.operator.python'
    'match': '\\$'
  }
  {
    'comment': 'python one-line renpy keyword'
    'name': 'invalid.deprecated.operator.python'
    'match': '\\breturn\\b'
  }
  {
    'comment': 'python one-line renpy keyword'
    'name': 'invalid.deprecated.operator.python'
    'match': 'pass'
  }
  {
    'comment': 'python statements renpy keywords'
    'name': 'support.type.python'
    'match': '\\b(python|renpy|store|persistent|config)\\b'
  }
  {
    'comment': 'python statements renpy keywords'
    'name': 'pythonblock.support.type.python'
    'match': '\\b(python)\\b'
  }
  {
    'comment': 'init statements renpy keywords'
    'name': 'keyword.control.statement.python'
    'match': '\\b(init)\\b'
  }

# Transitions Ren'Py Keywords. View(http://www.renpy.org/doc/html/transitions.html)

  {
    'comment': 'transition class renpy keywords'
    'name': 'support.type.python'
    'match': '\\b(Solid|AlphaDissolve|ComposeTransition|CropMove|Dissolve|Fade|ImageDissolve|MoveTransition|MultipleTransition|Pause|Pixellate|move_transitions)\\b'
  }
  {
    'comment': 'transitions renpy keywords'
    'name': 'support.type.python'
    'match': '\\b(fade|dissolve|pixellate|move|moveinright|moveinleft|moveintop|moveinbottom|moveoutright|moveoutleft|moveouttop|moveoutbottom|ease|easeinright|easeinleft|easeintop|easeinbottom|easeoutright|easeoutleft|easeouttop|easeoutbottom|zoomin|zoomout|zoominout|vpunch|hpunch|blinds|squares|wipeleft|wiperight|wipeup|wipedown|slideleft|slideright|slideup|slidedown|slideawayleft|slideawayright|slideawayup|slideawaydown|irisin|irisout)\\b'
  }

# Transform Properties Ren'Py Keywords. View(http://www.renpy.org/doc/html/atl.html#transform-properties)

  {
    'comment': 'transform properties renpy keywords'
    'name': 'variable.parameter.function.python'
    'match': '\\b(linear|top_margin|ymargin|xsize|ysize|yminimum|xminimum|ymaximum|xmaximum|transpose|insensitive|selected_idle|selected_hover|ground|idle|hover|focus_mask|hover_sound|activate_sound|style|spacing|text_align|size_group|layout|style_group|background|ypadding|xpadding|idle_color|hover_color|selected_idle_color|selected_hover_color|insensitive_color|xfill|xmargin|pos|xpos|ypos|anchor|xanchor|yanchor|align|xalign|yalign|xoffset|yoffset|xcenter|ycenter|rotate|rotate_pad|transform_anchor|zoom|xzoom|yzoom|nearest|alpha|additive|around|alignaround|angle|radius|crop|crop_relative|corner1|corner2|size|subpixel|delay|events)\\b'
  }

#  Movie Ren'Py Keywords. View(http://www.renpy.org/doc/html/movie.html)

  {
    'comment': 'Movie renpy keywords'
    'name': 'support.type.python'
    'match': '\\b(Movie|movie_cutscene)\\b'
  }

#  Audio/Movie functions Ren'Py Keywords. View(http://www.renpy.org/doc/html/audio.html)

  {
    'comment': 'Audio/Movie statements renpy keywords'
    'name': 'keyword.control.statement.python'
    'match': '\\b(play|queue|stop)\\b'
  }
  {
    'comment': 'Audio functions renpy keywords'
    'name': 'support.type.python'
    'match': '\\b(seen_audio|get_playing|is_playing|register_channel|set_pan|set_queue_empty_callback|set_volume|loop|noloop)\\b'
  }

# Image displaying functions Ren'Py Keywords. View(http://www.renpy.org/doc/html/displaying_images.html)

# {
#    'comment': 'image statements renpy keywords'
#    'name': 'keyword.control.statement.python'
#    'match': '\\b(hide|show)\\b'
#  }
  {
    'comment': 'show statements renpy keywords'
    'name': 'support.type.python'
    'match': '\\b(as|at|behind|onlayer|zorder|expression)\\b'
  }
  {
    'comment': 'image functions renpy keywords'
    'name': 'support.type.python'
    'match': '\\b(copy_images|get_image_bounds|get_placement|image_exists|seen_image|showing|start_predict|stop_predict)\\b'
  }

#  Action Ren'Py Keywords. View(http://www.renpy.org/doc/html/screen_actions.html)

  {
    'comment': 'action renpy keywords'
    'name': 'support.type.python'
    'match': '\\b(Hide|Jump|NullAction|Return|Show|ShowTransient)\\b'
  }
  {
    'comment': 'Data Action renpy keywords'
    'name': 'support.type.python'
    'match': '\\b(SetDict|SetField|SetScreenVariable|SetVariable|ToggleDict|ToggleField|ToggleScreenVariable|ToggleVariable)\\b'
  }
  {
    'comment': 'Menu Action renpy keywords'
    'name': 'support.type.python'
    'match': '\\b(MainMenu|Quit|ShowMenu|Start)\\b'
  }
  {
    'comment': 'File Action renpy keywords'
    'name': 'support.type.python'
    'match': '\\b(FileAction|FileDelete|FileLoad|FilePage|FilePageNext|FilePagePrevious|FileSave|FileTakeScreenShot|QuickLoad|QuickSave)\\b'
  }
  {
    'comment': 'Audio Action renpy keywords'
    'name': 'support.type.python'
    'match': '\\b(Play|Queue|SetMixer|Stop)\\b'
  }
  {
    'comment': 'Other Action renpy keywords'
    'name': 'support.type.python'
    'match': '\\b(Preference|Function|Help|HideInterface|If|InvertSelected|MouseMove|Notify|OpenURL|RollForward|Rollback|ScreenShot|SelectedIf|Skip|With)\\b'
  }

#  End of Action Ren'Py Keywords.

  {
    'comment': 'keyword operators that evaluate to True or False'
    'match': '\\b(and|in|is|not|or)\\b'
    'name': 'keyword.operator.logical.python'
  }
  {
    'begin': '^\\s*((jump)|(call)|(screen))\\s+(?=[a-zA-Z_][a-zA-Z_0-9]*\\s*)'
    'beginCaptures':
      '1':
        'name': 'keyword.control.statement.python'
    'end': '(\\n|\\()|#'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.inheritance.end.python'
      '2':
        'name': 'punctuation.section.class.begin.python'
      '3':
        'name': 'invalid.illegal.missing-section-begin.python'
    'name': 'meta.class.python'
    'patterns': [
      {
        'begin': '(?=[A-Za-z_][A-Za-z0-9_]*)'
        'contentName': 'entity.name.type.class.python'
        'end': '(?![A-Za-z0-9_])'
        'patterns': [
          {
            'include': '#entity_name_class'
          }
        ]
      }
      {
        'begin': '(\\()'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.inheritance.begin.python'
        'contentName': 'meta.class.inheritance.python'
        'end': '(?=\\)|:)'
        'patterns': [
          {
            'begin': '(?<=\\(|,)\\s*'
            'contentName': 'entity.other.inherited-class.python'
            'end': '\\s*(?:(,)|(?=\\)))'
            'endCaptures':
              '1':
                'name': 'punctuation.separator.inheritance.python'
            'patterns': [
              {
                'include': '$self'
              }
            ]
          }
        ]
      }
    ]
  }
  {
    'begin': '((define)|(image)|(scene)|(show)|(hide))\\s+((\\s)|(?=[a-zA-Z_][a-zA-Z_0-9]*\\s*))'
    'beginCaptures':
      '1':
        'name': 'keyword.control.statement.python'
    'end': '(\\=)|(\\s)|(\\s*$\\n?|#.*$\\n?)'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.inheritance.end.python'
      '2':
        'name': 'punctuation.section.class.begin.python'
      '3':
        'name': 'invalid.illegal.missing-section-begin.python'
    'name': 'meta.class.python'
    'patterns': [
      {
        'begin': '(?=[A-Za-z_][A-Za-z0-9_]*)'
        'contentName': 'entity.name.type.class.python'
        'end': '(?![A-Za-z0-9_])'
        'patterns': [
          {
            'include': '#entity_name_class'
          }
        ]
      }
      {
        'begin': '(\\()'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.inheritance.begin.python'
        'contentName': 'meta.class.inheritance.python'
        'end': '(?=\\)|:|)'
        'patterns': [
          {
            'begin': '(?<=\\(|,)\\s*'
            'contentName': 'entity.other.inherited-class.python'
            'end': '\\s*(?:(,)|(?=\\)))'
            'endCaptures':
              '1':
                'name': 'punctuation.separator.inheritance.python'
            'patterns': [
              {
                'include': '$self'
              }
            ]
          }
        ]
      }
    ]
  }
  {
    'begin': '^\\s*((label)|(menu))\\s?*((?=[a-zA-Z_][a-zA-Z_0-9]*)\\s*)'
    'beginCaptures':
      '1':
        'name': 'keyword.control.statement.python'
    'end': '(\\:|\\()|(\\s*$\\n?|#.*$\\n?)'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.inheritance.end.python'
      '2':
        'name': 'punctuation.section.class.begin.python'
      '3':
        'name': 'invalid.illegal.missing-section-begin.python'
    'name': 'meta.class.python'
    'patterns': [
      {
        'begin': '(?=[A-Za-z_][A-Za-z0-9_]*)'
        'contentName': 'entity.name.type.class.python'
        'end': '(?![A-Za-z0-9_])'
        'patterns': [
          {
            'include': '#entity_name_class'
          }
        ]
      }
      {
        'begin': '(\\()'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.inheritance.begin.python'
        'contentName': 'meta.class.inheritance.python'
        'end': '(?=\\)|:|)'
        'patterns': [
          {
            'begin': '(?<=\\(|,)\\s*'
            'contentName': 'entity.other.inherited-class.python'
            'end': '\\s*(?:(,)|(?=\\)))'
            'endCaptures':
              '1':
                'name': 'punctuation.separator.inheritance.python'
            'patterns': [
              {
                'include': '$self'
              }
            ]
          }
        ]
      }
    ]
  }
  {
    'match': '\\b(no_action|yes_action|no_action)\\b'
    'name': 'constant.language.python'
  }
  {
    "include": "source.python"
  }
]
